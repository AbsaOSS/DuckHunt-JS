DROP TABLE DUCKHUNTEVENTSTABLE;
DROP TABLE DUCKHUNTSCORE;
DROP STREAM DUCKHUNTEVENTS_SCORE;
DROP STREAM DUCKHUNTEVENTS;

CREATE TABLE TEST_TABLE (customer_id string primary key) WITH (KAFKA_TOPIC='duck_hunt_demo', VALUE_FORMAT='JSON', KEY_FORMAT='KAFKA');

CREATE STREAM DUCKHUNTEVENTS (EMAIL STRING KEY, EVENTTYPE STRING, EVENTSIZE INTEGER) WITH (KAFKA_TOPIC='duck_hunt_demo', KEY_FORMAT='KAFKA', VALUE_FORMAT='JSON');

CREATE STREAM DUCKHUNTEVENTS_SCORE AS SELECT

  DUCKHUNTEVENTS.EMAIL EMAIL,
  DUCKHUNTEVENTS.EVENTSIZE SCORE
FROM DUCKHUNTEVENTS DUCKHUNTEVENTS
WHERE (DUCKHUNTEVENTS.EVENTTYPE = 'SCORE')
EMIT CHANGES;

CREATE TABLE DUCKHUNTSCORE AS SELECT
  DUCKHUNTEVENTS.EMAIL EMAIL,
  MAX(DUCKHUNTEVENTS.EVENTSIZE) SCORE
FROM DUCKHUNTEVENTS DUCKHUNTEVENTS
WHERE ((DUCKHUNTEVENTS.EVENTTYPE = 'SCORE') AND ((UNIX_TIMESTAMP() - DUCKHUNTEVENTS.ROWTIME) < 3600000))
GROUP BY DUCKHUNTEVENTS.EMAIL
EMIT CHANGES;

CREATE TABLE DUCKHUNTEVENTSTABLE (EMAIL STRING PRIMARY KEY, EVENTTYPE STRING, EVENTSIZE INTEGER) WITH (KAFKA_TOPIC='duck_hunt_demo', KEY_FORMAT='KAFKA', VALUE_FORMAT='JSON');


CREATE STREAM DUCKHUNTEVENTS_ALL (USER STRING KEY, EVENTTYPE STRING, EVENTSIZE INTEGER) WITH (KAFKA_TOPIC='duck_hunt_demo', KEY_FORMAT='KAFKA', VALUE_FORMAT='JSON');

DROP TABLE SCORES_TABLE_SUMMARY;
CREATE TABLE SCORES_TABLE_SUMMARY AS SELECT
  DUCKHUNTEVENTS_SCORE.EMAIL EMAIL,
  MAX(DUCKHUNTEVENTS_SCORE.SCORE) TOTAL_SCORE
FROM DUCKHUNTEVENTS_SCORE DUCKHUNTEVENTS_SCORE
GROUP BY DUCKHUNTEVENTS_SCORE.EMAIL
EMIT CHANGES;

select * from DUCKHUNTEVENTS_ALL emit changes;

SELECT
    IFNULL(SUM(CASE WHEN EVENTTYPE = 'SHOT' THEN EVENTSIZE ELSE 0 END), 0) TOTAL_SHOTS,
    IFNULL(SUM(CASE WHEN EVENTTYPE = 'HIT' THEN EVENTSIZE ELSE 0 END), 0) TOTAL_HITS,
    IFNULL(SUM(CASE WHEN EVENTTYPE = 'HIT' AND EVENTSIZE = 0 THEN 1 ELSE 0 END), 0) TOTAL_MISSES,
    ROUND(
      cast(IFNULL(SUM(CASE WHEN EVENTTYPE = 'HIT' THEN EVENTSIZE ELSE 0 END), 0) as Double) /
      cast(IFNULL(SUM(CASE WHEN EVENTTYPE = 'SHOT' THEN EVENTSIZE ELSE 0 END), 0) as Double)
    , 2) HIT_RATIO
FROM DUCKHUNTEVENTS_ALL
EMIT CHANGES;